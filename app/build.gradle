apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: "com.google.devtools.ksp"

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
    namespace "com.nasa.voyager"
    compileSdk 34

    signingConfigs {
        release {
            storeFile file(localProperties['FILE_KEY'])
            storePassword localProperties['STORE_KEY']
            keyAlias localProperties['ALIAS_KEY']
            keyPassword localProperties['STORE_KEY']
        }
    }
    defaultConfig {
        applicationId 'com.nasa.voyager'
        minSdk 26
        targetSdk 34
        versionCode 4
        versionName "1.0.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        android.buildFeatures.buildConfig true
        buildConfigField "String", "PRIVATE_KEY", localProperties['PRIVATE_KEY']
        buildConfigField "String", "BASE_URL", '"https://api.nasa.gov/"'
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled = true
    }

    buildTypes {
        debug{
            applicationIdSuffix '.debug'
            debuggable = true
        }
        staging{
            initWith debug
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources = true
            applicationIdSuffix '.staging'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro',
                    'proguard-rules-staging.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro',
                    'proguard-rules-staging.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
    buildFeatures {
        compose true
    }
    lint {
        abortOnError false
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }
    kapt {
        correctErrorTypes true
    }
    ksp {
        arg("lyricist.internalVisibility", "true")
        arg("lyricist.generateStringsProperty", "true")
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
    kotlin.sourceSets.configureEach {
        android.applicationVariants.configureEach { variant -> kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin") }
    }
}

dependencies {

    implementation libs.core
    implementation platform(libs.kotlin.bom)
    implementation libs.lifecycle
    implementation libs.lifecycle.viewmodel
    implementation libs.lifecycle.livedata
    implementation libs.compose.activity
    implementation libs.gson
    implementation libs.moshi
    implementation libs.javax.dep

    implementation libs.compose.ui
    implementation libs.compose.coil
    implementation libs.compose.material3
    implementation libs.compose.preview
    implementation libs.material.google
    implementation libs.system.ui.controller
    implementation libs.exoplayer

    implementation libs.kodein.android
    implementation libs.kodein.conf
    implementation libs.kodein.core

    implementation libs.voyager.navigator
    implementation libs.voyager.bottom.sheet
    implementation libs.voyager.tab
    implementation libs.voyager.transitions
    implementation libs.voyager.androidx
    implementation libs.voyager.livedata
    implementation libs.voyager.kodein

    implementation libs.lyricist
    ksp libs.lyricist.processor
    ksp libs.lyricist.debug

    //Firebase
    implementation platform(libs.firebase.bom)
//    implementation libs.firebase.analytics

    implementation libs.coroutines.core
    implementation libs.retrofit
    implementation libs.retrofit.converter
    implementation platform(libs.okhttp3.bom)
    implementation libs.okhttp3
    implementation libs.okhttp3.interceptor

    //Test
    implementation libs.bundles.app.test
}