apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.gms.google-services'

apply from: "$rootDir/config/detekt/detekt.gradle"

def storeKeyPropertiesFile = rootProject.file("storeKey.properties")
def storeKeyProperties = new Properties()
storeKeyProperties.load(new FileInputStream(storeKeyPropertiesFile))

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    namespace rootProject.versions.namespace
    compileSdk rootProject.versions.compileSdk

    signingConfigs {
        release {
            storeFile file(storeKeyProperties['FILE_KEY'])
            storePassword storeKeyProperties['STORE_KEY']
            keyAlias storeKeyProperties['ALIAS_KEY']
            keyPassword storeKeyProperties['STORE_KEY']
        }
    }

    defaultConfig {
        applicationId rootProject.versions.applicationId
        minSdk rootProject.versions.minSdk
        targetSdk rootProject.versions.targetSdk
        versionCode rootProject.versions.versionCode
        versionName rootProject.versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField "String", "PRIVATE_KEY", apikeyProperties['PRIVATE_KEY']
        buildConfigField "String", "BASE_URL", '"https://api.nasa.gov/"'
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled = true
    }

    buildTypes {
        debug{
            applicationIdSuffix '.debug'
            debuggable = true
        }
        staging{
            initWith debug
            minifyEnabled true
            applicationIdSuffix '.staging'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro',
                    'proguard-rules-staging.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
    buildFeatures {
        compose true
    }
    lint {
        abortOnError false
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    def testDependencies = rootProject.ext.testDependencies
    def appDependencies = rootProject.ext.appDependencies
    def modules = rootProject.ext.modules

    implementation project(modules.core)
    testImplementation project(modules.testing)

    implementation appDependencies.core
    implementation appDependencies.lifecycle
    implementation appDependencies.lifecycleLivedata
    implementation appDependencies.lifecycleViewmodel
    implementation appDependencies.composeActivity

    //Compose
    implementation appDependencies.materialGoogle
    implementation appDependencies.composeUi
    implementation appDependencies.composeMaterial3
    implementation appDependencies.composeUiTooling
    implementation appDependencies.systemUiController
    implementation appDependencies.composeCoil

    implementation appDependencies.exoplayer

    //Hilt
    implementation appDependencies.hiltAndroid
    kapt appDependencies.hiltCompiler
    kapt appDependencies.hiltCompilerAndroidx

    //Firebase
    implementation platform(appDependencies.firebaseBom)
    implementation appDependencies.firebaseAnalytics

    implementation appDependencies.moshi

    //Test
    testImplementation testDependencies.junit
    testImplementation testDependencies.roomTesting
    testImplementation testDependencies.navigationTest
    testImplementation testDependencies.coreTestingVersion
    androidTestImplementation testDependencies.extJunit
    androidTestImplementation testDependencies.espresso

    androidTestImplementation testDependencies.composeJunit4
    debugImplementation testDependencies.composeTooling
    debugImplementation testDependencies.composeManifest

    androidTestImplementation testDependencies.extJunit
    androidTestImplementation testDependencies.espresso
    androidTestImplementation testDependencies.runnerTest
    androidTestImplementation testDependencies.hiltTest
    androidTestImplementation testDependencies.hiltTestCompiler
}