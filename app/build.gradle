apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

apply from: "$rootDir/config/detekt/detekt.gradle"

def storeKeyPropertiesFile = rootProject.file("storeKey.properties")
def storeKeyProperties = new Properties()
storeKeyProperties.load(new FileInputStream(storeKeyPropertiesFile))

android {
    namespace VersionsBuild.namespace
    compileSdk VersionsBuild.compileSdk

    signingConfigs {
        release {
            storeFile file(storeKeyProperties['FILE_KEY'])
            storePassword storeKeyProperties['STORE_KEY']
            keyAlias storeKeyProperties['ALIAS_KEY']
            keyPassword storeKeyProperties['STORE_KEY']
        }
    }

    defaultConfig {
        applicationId VersionsBuild.applicationId
        minSdk VersionsBuild.minSdk
        targetSdk VersionsBuild.targetSdk
        versionCode VersionsBuild.versionCode
        versionName VersionsBuild.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled = true
    }

    buildTypes {
        debug{
            applicationIdSuffix '.debug'
            debuggable = true
        }
        staging{
            initWith debug
            minifyEnabled true
            applicationIdSuffix '.staging'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro',
                    'proguard-rules-staging.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation project(AppModules.coreModule)

    implementation AppDependencies.core
    implementation AppDependencies.lifecycle
    implementation AppDependencies.composeActivity
    implementation AppDependencies.gson

    //Compose
    implementation AppDependencies.materialGoogle
    implementation AppDependencies.composeUi
    implementation AppDependencies.composeMaterial3
    implementation AppDependencies.composeUiTooling
    implementation AppDependencies.systemUiController

    //Hilt
    implementation AppDependencies.hiltAndroid
    kapt AppDependencies.hiltCompiler

    //Test
    testImplementation TestDependencies.junit
    androidTestImplementation TestDependencies.extJunit
    androidTestImplementation TestDependencies.espresso

    androidTestImplementation TestDependencies.composeJunit4
    debugImplementation TestDependencies.composeTooling
    debugImplementation TestDependencies.composeManifest
}